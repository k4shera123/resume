console.log("Resume loaded for –ì–µ—Ä–º–∞–Ω –ö–æ—Ç");

const translations = {
  ru: {
    name: "–ì–µ—Ä–º–∞–Ω –ö–æ—Ç",
    title: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –º–æ–±–∏–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º",
    contactEmail: "g.kot@students.psu.by",
    contactTelegram: "@k4shera",
    contactGitHub: "k4shera123",
    skillsTitle: "–ù–∞–≤—ã–∫–∏",
    skillsList: [
      "–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å",
      "–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å",
      "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å",
      "–î—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç—å",
      "–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ",
    ],
    aboutMeTitle: "–û–±–æ –º–Ω–µ",
    aboutMeParagraphs: [
      "–Ø 18-–ª–µ—Ç–Ω–∏–π —Å—Ç—É–¥–µ–Ω—Ç. –û–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π, –ª–µ–≥–∫–æ –Ω–∞—Ö–æ–∂—É –æ–±—â–∏–π —è–∑—ã–∫ –∏ —Å—Ç—Ä–µ–º–ª—é—Å—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞.",
      "<strong>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –ü–û:</strong> HTML, CSS, JavaScript (—Å—Ä–µ–¥–Ω–∏–π), Git (–Ω–∞—á–∞–ª—å–Ω—ã–π)",
      "<strong>–Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏:</strong> –†—É—Å—Å–∫–∏–π (—Ä–æ–¥–Ω–æ–π), –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (A2)",
      "<strong>–•–æ–±–±–∏:</strong> –ë–∏–∑–Ω–µ—Å, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, motion design, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥",
    ],
    educationTitle: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
    educationUniversity: "–ü–æ–ª–æ—Ü–∫–∏–π –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
    educationFaculty: "–§–∞–∫—É–ª—å—Ç–µ—Ç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
    educationSpecialty: "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: –ú–æ–±–∏–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
    educationYears: "2024 ‚Äì 2028",
    experienceTitle: "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã",
    experienceContent: `<p><strong>–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: C++</strong></p>
      <p>–†–∞–±–æ—Ç–∞–ª –Ω–∞–¥ —Ä—è–¥–æ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∏ –∫—É—Ä—Å–æ–≤—ã—Ö —Ä–∞–±–æ—Ç –≤ —Ä–∞–º–∫–∞—Ö —É—á–µ–±–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. –¢–µ–º—ã –≤–∫–ª—é—á–∞–ª–∏:</p>
      <ul>
        <li>–ú–∞—Å—Å–∏–≤—ã: –∞–ª–≥–æ—Ä–∏—Ç–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö</li>
        <li>–°–≤—è–∑–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö</li>
        <li>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: –ø—É–∑—ã—Ä—å–∫–æ–≤–∞—è, –±—ã—Å—Ç—Ä–∞—è, –≤—Å—Ç–∞–≤–∫–∞–º–∏</li>
        <li>–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ ¬´–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞¬ª:
          <ul>
            <li>–ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É, –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –≥–æ–¥—É</li>
            <li>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º</li>
            <li>–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã</li>
            <li>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª</li>
          </ul>
        </li>
      </ul>`,
    coursesTitle: "–£—á–µ–±–Ω—ã–µ –∫—É—Ä—Å—ã",
    coursesContent: "<ul><li>–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (C++) ‚Äî –æ—Ç–ª–∏—á–Ω–æ</li></ul>",
    communityTitle: "–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∂–∏–∑–Ω—å",
    communityContent: "<p>–£—á–∞—Å—Ç–Ω–∏–∫ –º–æ–ª–æ–¥–µ–∂–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ –∏ –ë–†–°–ú, –∞–∫—Ç–∏–≤–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –≥—Ä–∞–∂–¥–∞–Ω—Å–∫—É—é –ø–æ–∑–∏—Ü–∏—é.</p>",
    achievementsTitle: "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –Ω–∞–≥—Ä–∞–¥—ã",
    achievementsContent: "<ul><li>3-–µ –º–µ—Å—Ç–æ –≤–æ 2-–º —ç—Ç–∞–ø–µ –†–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ</li></ul>",
    whyMeTitle: "–ü–æ—á–µ–º—É —è?",
    whyMeList: [
      "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è ‚Äî –º–æ—è —Å–∏–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞",
      "–£–º–µ—é –≤—ã—è–≤–ª—è—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –∑–∞–º–µ—á–∞—Ç—å –¥–µ—Ç–∞–ª–∏",
      "–ì–æ—Ç–æ–≤ –ø—Ä–æ—è–≤–∏—Ç—å —Å–µ–±—è –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è",
    ],
    disciplinesButton: "–ò–∑—É—á–∞–µ–º—ã–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã",
    disciplinesPageTitle: "–ò–ó–£–ß–ê–ï–ú–´–ï –î–ò–°–¶–ò–ü–õ–ò–ù–´",
    backButton: "–ù–∞ –≥–ª–∞–≤–Ω—É—é",
    specLabel: "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:",
    profilLabel: "–ü—Ä–æ—Ñ–∏–ª–∏–∑–∞—Ü–∏—è:",
    qualLabel: "–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è:",
  },
  en: {
    name: "Herman Kot",
    title: "Mobile System Developer",
    contactEmail: "g.kot@students.psu.by",
    contactTelegram: "@k4shera",
    contactGitHub: "k4shera123",
    skillsTitle: "Skills",
    skillsList: [
      "Communication",
      "Stress resistance",
      "Initiative",
      "Friendliness",
      "Teamwork",
    ],
    aboutMeTitle: "About me",
    aboutMeParagraphs: [
      "I am an 18-year-old student. Sociable and proactive, easily find common ground and strive to develop programming skills for career growth.",
      "<strong>Professional software skills:</strong> HTML, CSS, JavaScript (intermediate), Git (beginner)",
      "<strong>Language skills:</strong> Russian (native), English (A2)",
      "<strong>Hobbies:</strong> Business, cryptocurrency, motion design, marketing",
    ],
    educationTitle: "Education",
    educationUniversity: "Polotsk State University",
    educationFaculty: "Faculty of Information Technology",
    educationSpecialty: "Specialty: Mobile Systems",
    educationYears: "2024 ‚Äì 2028",
    experienceTitle: "Work Experience",
    experienceContent: `<p><strong>Programming language: C++</strong></p>
      <p>Worked on several lab and course projects as part of the study program. Topics include:</p>
      <ul>
        <li>Arrays: implementing data processing and sorting algorithms</li>
        <li>Linked lists and structures: creating dynamic data structures</li>
        <li>Sorting: bubble sort, quicksort, and insertion sort</li>
        <li>Course project "Library":
          <ul>
            <li>Searching by author, title, year</li>
            <li>Sorting by various criteria</li>
            <li>Displaying list as table</li>
            <li>Saving and loading data from file</li>
          </ul>
        </li>
      </ul>`,
    coursesTitle: "Courses",
    coursesContent: "<ul><li>Introduction to programming (C++) grade: excellent</li></ul>",
    communityTitle: "Community Involvement",
    communityContent: "<p>Member of youth organizations, trade union and BRSM, actively supporting civil position.</p>",
    achievementsTitle: "Achievements and Awards",
    achievementsContent: "<ul><li>Third place in the second stage of the Republican Mathematics Olympiad</li></ul>",
    whyMeTitle: "Why me?",
    whyMeList: [
      "Communication is my strong point",
      "I can identify needs and notice details",
      "Ready to prove myself and grow",
    ],
    disciplinesButton: "Disciplines",
    disciplinesPageTitle: "DISCIPLINES",
    backButton: "Back to main",
    specLabel: "Specialty:",
    profilLabel: "Specialization:",
    qualLabel: "Qualification:",
  }
};

function safeUpdate(selector, content, isHTML = true) {
  const element = document.querySelector(selector);
  if (element) {
    if (isHTML) {
      element.innerHTML = content;
    } else {
      element.textContent = content;
    }
    return true;
  }
  return false;
}

function updateContent(lang) {
  const t = translations[lang] || translations['ru'];
  
  safeUpdate('.sidebar h1', t.name, false);
  safeUpdate('.sidebar .title', t.title, false);
  safeUpdate('.contact-info', `
    <p>üìß <a href="mailto:${t.contactEmail}">${t.contactEmail}</a></p>
    <p>üí¨ <a href="https://t.me/${t.contactTelegram.replace('@', '')}" target="_blank">${t.contactTelegram}</a></p>
    <p>üíª <a href="https://github.com/${t.contactGitHub}" target="_blank">${t.contactGitHub}</a></p>
  `);

  safeUpdate('.skills h2', t.skillsTitle, false);
  safeUpdate('.skills ul', t.skillsList.map(skill => `<li>${skill}</li>`).join(''));
  
  safeUpdate('.about h2', t.aboutMeTitle, false);
  safeUpdate('.about .card', t.aboutMeParagraphs.map(p => `<p>${p}</p>`).join(''));
  
  safeUpdate('.education h2', t.educationTitle, false);
  safeUpdate('.education .card', `
    <h3>${t.educationUniversity}</h3>
    <p>
      ${t.educationFaculty}<br>
      ${t.educationSpecialty}<br>
      <em>${t.educationYears}</em>
    </p>
    <button id="view-disciplines" class="disciplines-link" type="button">
      ${t.disciplinesButton}
    </button>
  `);
  
  safeUpdate('.experience h2', t.experienceTitle, false);
  safeUpdate('.experience .card', t.experienceContent);
  
  safeUpdate('.courses h2', t.coursesTitle, false);
  safeUpdate('.courses .card', t.coursesContent);
  
  safeUpdate('.community h2', t.communityTitle, false);
  safeUpdate('.community .card', t.communityContent);
  
  safeUpdate('.achievements h2', t.achievementsTitle, false);
  safeUpdate('.achievements .card', t.achievementsContent);
  
  safeUpdate('.why-me h2', t.whyMeTitle, false);
  safeUpdate('.why-me ul', t.whyMeList.map(item => `<li>${item}</li>`).join(''));

  safeUpdate('.disciplines-header h1', t.disciplinesPageTitle, false);
  safeUpdate('.back-button', `<i class="fas fa-arrow-left"></i> ${t.backButton}`);
  
  const infoLabels = document.querySelectorAll('.specialization-info p');
  if (infoLabels.length >= 3) {
    infoLabels[0].querySelector('strong').textContent = t.specLabel;
    infoLabels[1].querySelector('strong').textContent = t.profilLabel;
    infoLabels[2].querySelector('strong').textContent = t.qualLabel;
  }
}

function initApp() {
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme === 'dark') {
    document.body.classList.add('dark');
  }

  const langSelector = document.getElementById('language-select');
  if (langSelector) {
    const savedLang = localStorage.getItem('language') || 'ru';
    langSelector.value = savedLang;
    updateContent(savedLang);

    langSelector.addEventListener('change', (e) => {
      const lang = e.target.value;
      localStorage.setItem('language', lang);
      updateContent(lang);
    });
  }

  const themeToggle = document.getElementById('theme-toggle');
  if (themeToggle) {
    themeToggle.addEventListener('click', () => {
      document.body.classList.toggle('dark');
      localStorage.setItem(
        'theme',
        document.body.classList.contains('dark') ? 'dark' : 'light'
      );
    });
  }

  const backButton = document.querySelector('.back-button');
  if (backButton) {
    backButton.addEventListener('click', () => {
      window.location.href = 'index.html';
    });
  }

  document.addEventListener('click', (e) => {
    if (e.target && e.target.id === 'view-disciplines') {
      window.location.href = 'disciplines.html';
    }
  });

  const animateElements = document.querySelectorAll('.animate');
  if (animateElements.length > 0) {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 }
    );
    animateElements.forEach(el => observer.observe(el));
  }
}

document.addEventListener('DOMContentLoaded', initApp);
